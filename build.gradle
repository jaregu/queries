buildscript {
     repositories {
         jcenter()
     }
     dependencies {
         classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
     }
}

plugins {
	id "com.gradle.build-scan" version "2.3"
}

apply plugin: 'com.bmuschko.nexus'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'eclipse-wtp'
 
repositories {
	mavenCentral()
	// gradlePluginPortal()
	jcenter()
	maven { url "https://maven.atlassian.com/3rdparty/" }
}

buildScan {
	termsOfServiceUrl = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'
}

[
	compileJava,
	compileTestJava
]*.options*.encoding = 'UTF-8'

sourceCompatibility = 1.8

version = '1.1.0'
archivesBaseName = "queries"
group = "com.jaregu"

eclipseJdt.doLast {
	File f = file('.settings/org.eclipse.core.resources.prefs')
	f.write('eclipse.preferences.version=1\n')
	f.append('encoding/<project>=utf-8')
}

configurations {
	example
	exampleCompile.extendsFrom testCompile
	exampleRuntime.extendsFrom testRuntime
}

sourceSets {
	example {
		java { srcDir 'src/example/java' }
		resources { srcDir 'src/example/resources' }
	}
}

eclipse {
	classpath {
		plusConfigurations += [configurations.example]
	}
}

dependencies {
	compile 'org.slf4j:slf4j-api:1.7.25'
	
	compileOnly 'com.fasterxml.jackson.core:jackson-annotations:2.9.+'
	
	// for caching extension
	compileOnly "com.github.ben-manes.caffeine:caffeine:2.+"

	// for metrics extension
	compileOnly  'io.dropwizard.metrics:metrics-core:3.+'

	// for guice extension
	compileOnly "com.google.inject:guice:4.+"
	
	// for hikari extension
	compileOnly "com.zaxxer:HikariCP:3.+"
	
	// for dalesbred extension
	compileOnly "org.dalesbred:dalesbred:1.3.+"

	testCompile 'org.mockito:mockito-core:2.21.0'
	testCompile 'junit:junit:4.12'
	testCompile 'org.assertj:assertj-core:3.8.0'

	example "com.github.ben-manes.caffeine:caffeine:2.+"

	//logging
	example "ch.qos.logback:logback-classic:1.2.+"
	example "org.codehaus.groovy:groovy-all:2.4.13"

	//db
	example "org.hsqldb:hsqldb:2.4.+"
	example 'org.mariadb.jdbc:mariadb-java-client:1.5.+'
	example group: 'com.oracle', name: 'ojdbc6', version: '12.1.0.1-atlassian-hosted'

	example "com.zaxxer:HikariCP:3.+"
	example 'org.dalesbred:dalesbred:1.3.+'
	example 'org.assertj:assertj-core:3.8.0'
	example 'junit:junit:4.12'
}

jar {
	manifest {
		attributes 'Implementation-Title': 'Jaregu Queries', 'Implementation-Version': version
	}
}

modifyPom {
     project {
         name 'Jaregu Queries'
         description 'Java based SQL templating project. Store your queries in *.sql files and build queries for execution. Supports simple expressions and conditional clauses and interface proxying for java-sql bridge.'
         url 'https://github.com/jaregu/queries'
         inceptionYear '2017'

         scm {
             url 'https://github.com/jaregu/queries'
             connection 'scm:https://jaregu@github.com/jaregu/queries.git'
             developerConnection 'scm:git://github.com/jaregu/queries.git'
         }

         licenses {
             license {
                 name 'The Apache Software License, Version 2.0'
                 url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                 distribution 'repo'
             }
         }

         developers {
             developer {
                 id 'mme-private'
                 name 'MƒÅrcis Meijers'
                 email 'marcis.meijers@gmail.com'
                 roles {
                     role 'owner'
                     role 'developer'
                 }
             }
         }
     }
 }
 
 extraArchive {
     sources = true
     tests = true
     javadoc = true
 }